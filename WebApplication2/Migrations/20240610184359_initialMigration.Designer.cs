// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalTest.Infrastructure.Data;

#nullable disable

namespace TechnicalTest.Api.Migrations
{
    [DbContext(typeof(DataEntities))]
    [Migration("20240610184359_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TechnicalTest.Infrastructure.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerLGAId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("RegistrationStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerLGAId");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TechnicalTest.Infrastructure.Entities.CustomerLGA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerStateId")
                        .HasColumnType("int");

                    b.Property<string>("LGADescription")
                        .HasMaxLength(2055)
                        .HasColumnType("nvarchar(2055)");

                    b.Property<string>("LGAName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerStateId");

                    b.ToTable("CustomerLGAs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerStateId = 1,
                            LGADescription = "Some description",
                            LGAName = "Kosofe"
                        },
                        new
                        {
                            Id = 2,
                            CustomerStateId = 1,
                            LGADescription = "Some description",
                            LGAName = "Ikorodu"
                        },
                        new
                        {
                            Id = 3,
                            CustomerStateId = 4,
                            LGADescription = "Some description",
                            LGAName = "Ikono"
                        },
                        new
                        {
                            Id = 4,
                            CustomerStateId = 5,
                            LGADescription = "Some description",
                            LGAName = "Asaba"
                        },
                        new
                        {
                            Id = 5,
                            CustomerStateId = 2,
                            LGADescription = "Some description",
                            LGAName = "Ibadan"
                        },
                        new
                        {
                            Id = 6,
                            CustomerStateId = 3,
                            LGADescription = "Some description",
                            LGAName = "Oyo"
                        });
                });

            modelBuilder.Entity("TechnicalTest.Infrastructure.Entities.CustomerState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("StateDescription")
                        .IsRequired()
                        .HasMaxLength(2550)
                        .HasColumnType("nvarchar(2550)");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StateDescription = "Centre of exellence",
                            StateName = "Lagos"
                        },
                        new
                        {
                            Id = 2,
                            StateDescription = "God's own state",
                            StateName = "Ogun"
                        },
                        new
                        {
                            Id = 3,
                            StateDescription = "Owsome state",
                            StateName = "Oyo"
                        },
                        new
                        {
                            Id = 4,
                            StateDescription = "Land of promise",
                            StateName = "Akwa Ibom"
                        },
                        new
                        {
                            Id = 5,
                            StateDescription = "Some description",
                            StateName = "Delta"
                        });
                });

            modelBuilder.Entity("TechnicalTest.Infrastructure.Entities.OtpLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("OTP")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("OtpLogs");
                });

            modelBuilder.Entity("TechnicalTest.Infrastructure.Entities.Customer", b =>
                {
                    b.HasOne("TechnicalTest.Infrastructure.Entities.CustomerLGA", "CustomerLGA")
                        .WithMany()
                        .HasForeignKey("CustomerLGAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerLGA");
                });

            modelBuilder.Entity("TechnicalTest.Infrastructure.Entities.CustomerLGA", b =>
                {
                    b.HasOne("TechnicalTest.Infrastructure.Entities.CustomerState", "CustomerState")
                        .WithMany()
                        .HasForeignKey("CustomerStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerState");
                });
#pragma warning restore 612, 618
        }
    }
}
